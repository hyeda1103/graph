// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from "flatbuffers";

export class StablehloCustomCallOptions {
  bb: flatbuffers.ByteBuffer | null = null;
  bb_pos = 0;
  __init(i: number, bb: flatbuffers.ByteBuffer): StablehloCustomCallOptions {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  static getRootAsStablehloCustomCallOptions(
    bb: flatbuffers.ByteBuffer,
    obj?: StablehloCustomCallOptions,
  ): StablehloCustomCallOptions {
    return (obj || new StablehloCustomCallOptions()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb,
    );
  }

  static getSizePrefixedRootAsStablehloCustomCallOptions(
    bb: flatbuffers.ByteBuffer,
    obj?: StablehloCustomCallOptions,
  ): StablehloCustomCallOptions {
    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
    return (obj || new StablehloCustomCallOptions()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb,
    );
  }

  callTargetName(): string | null;
  callTargetName(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  callTargetName(optionalEncoding?: any): string | Uint8Array | null {
    const offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
  }

  hasSideEffect(): boolean {
    const offset = this.bb!.__offset(this.bb_pos, 6);
    return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
  }

  backendConfig(): string | null;
  backendConfig(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  backendConfig(optionalEncoding?: any): string | Uint8Array | null {
    const offset = this.bb!.__offset(this.bb_pos, 8);
    return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
  }

  apiVersion(): number {
    const offset = this.bb!.__offset(this.bb_pos, 10);
    return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
  }

  calledComputations(index: number): number | null {
    const offset = this.bb!.__offset(this.bb_pos, 12);
    return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;
  }

  calledComputationsLength(): number {
    const offset = this.bb!.__offset(this.bb_pos, 12);
    return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
  }

  calledComputationsArray(): Int32Array | null {
    const offset = this.bb!.__offset(this.bb_pos, 12);
    return offset
      ? new Int32Array(
          this.bb!.bytes().buffer,
          this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),
          this.bb!.__vector_len(this.bb_pos + offset),
        )
      : null;
  }

  customAttributes(index: number): number | null {
    const offset = this.bb!.__offset(this.bb_pos, 14);
    return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;
  }

  customAttributesLength(): number {
    const offset = this.bb!.__offset(this.bb_pos, 14);
    return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
  }

  customAttributesArray(): Uint8Array | null {
    const offset = this.bb!.__offset(this.bb_pos, 14);
    return offset
      ? new Uint8Array(
          this.bb!.bytes().buffer,
          this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),
          this.bb!.__vector_len(this.bb_pos + offset),
        )
      : null;
  }

  static startStablehloCustomCallOptions(builder: flatbuffers.Builder) {
    builder.startObject(6);
  }

  static addCallTargetName(builder: flatbuffers.Builder, callTargetNameOffset: flatbuffers.Offset) {
    builder.addFieldOffset(0, callTargetNameOffset, 0);
  }

  static addHasSideEffect(builder: flatbuffers.Builder, hasSideEffect: boolean) {
    builder.addFieldInt8(1, +hasSideEffect, +false);
  }

  static addBackendConfig(builder: flatbuffers.Builder, backendConfigOffset: flatbuffers.Offset) {
    builder.addFieldOffset(2, backendConfigOffset, 0);
  }

  static addApiVersion(builder: flatbuffers.Builder, apiVersion: number) {
    builder.addFieldInt32(3, apiVersion, 0);
  }

  static addCalledComputations(
    builder: flatbuffers.Builder,
    calledComputationsOffset: flatbuffers.Offset,
  ) {
    builder.addFieldOffset(4, calledComputationsOffset, 0);
  }

  static createCalledComputationsVector(
    builder: flatbuffers.Builder,
    data: number[] | Int32Array,
  ): flatbuffers.Offset;
  /**
   * @deprecated This Uint8Array overload will be removed in the future.
   */
  static createCalledComputationsVector(
    builder: flatbuffers.Builder,
    data: number[] | Uint8Array,
  ): flatbuffers.Offset;
  static createCalledComputationsVector(
    builder: flatbuffers.Builder,
    data: number[] | Int32Array | Uint8Array,
  ): flatbuffers.Offset {
    builder.startVector(4, data.length, 4);
    for (let i = data.length - 1; i >= 0; i--) {
      builder.addInt32(data[i]!);
    }
    return builder.endVector();
  }

  static startCalledComputationsVector(builder: flatbuffers.Builder, numElems: number) {
    builder.startVector(4, numElems, 4);
  }

  static addCustomAttributes(
    builder: flatbuffers.Builder,
    customAttributesOffset: flatbuffers.Offset,
  ) {
    builder.addFieldOffset(5, customAttributesOffset, 0);
  }

  static createCustomAttributesVector(
    builder: flatbuffers.Builder,
    data: number[] | Uint8Array,
  ): flatbuffers.Offset {
    builder.startVector(1, data.length, 1);
    for (let i = data.length - 1; i >= 0; i--) {
      builder.addInt8(data[i]!);
    }
    return builder.endVector();
  }

  static startCustomAttributesVector(builder: flatbuffers.Builder, numElems: number) {
    builder.startVector(1, numElems, 1);
  }

  static endStablehloCustomCallOptions(builder: flatbuffers.Builder): flatbuffers.Offset {
    const offset = builder.endObject();
    return offset;
  }

  static createStablehloCustomCallOptions(
    builder: flatbuffers.Builder,
    callTargetNameOffset: flatbuffers.Offset,
    hasSideEffect: boolean,
    backendConfigOffset: flatbuffers.Offset,
    apiVersion: number,
    calledComputationsOffset: flatbuffers.Offset,
    customAttributesOffset: flatbuffers.Offset,
  ): flatbuffers.Offset {
    StablehloCustomCallOptions.startStablehloCustomCallOptions(builder);
    StablehloCustomCallOptions.addCallTargetName(builder, callTargetNameOffset);
    StablehloCustomCallOptions.addHasSideEffect(builder, hasSideEffect);
    StablehloCustomCallOptions.addBackendConfig(builder, backendConfigOffset);
    StablehloCustomCallOptions.addApiVersion(builder, apiVersion);
    StablehloCustomCallOptions.addCalledComputations(builder, calledComputationsOffset);
    StablehloCustomCallOptions.addCustomAttributes(builder, customAttributesOffset);
    return StablehloCustomCallOptions.endStablehloCustomCallOptions(builder);
  }
}
