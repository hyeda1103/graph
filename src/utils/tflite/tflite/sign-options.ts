// automatically generated by the FlatBuffers compiler, do not modify

import "flatbuffers";

export class SignOptions {
  bb: flatbuffers.ByteBuffer | null = null;
  bb_pos = 0;
  __init(i: number, bb: flatbuffers.ByteBuffer): SignOptions {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  static getRootAsSignOptions(bb: flatbuffers.ByteBuffer, obj?: SignOptions): SignOptions {
    return (obj || new SignOptions()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  }

  static getSizePrefixedRootAsSignOptions(
    bb: flatbuffers.ByteBuffer,
    obj?: SignOptions,
  ): SignOptions {
    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
    return (obj || new SignOptions()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  }

  static startSignOptions(builder: flatbuffers.Builder) {
    builder.startObject(0);
  }

  static endSignOptions(builder: flatbuffers.Builder): flatbuffers.Offset {
    const offset = builder.endObject();
    return offset;
  }

  static createSignOptions(builder: flatbuffers.Builder): flatbuffers.Offset {
    SignOptions.startSignOptions(builder);
    return SignOptions.endSignOptions(builder);
  }
}
