// automatically generated by the FlatBuffers compiler, do not modify

import "flatbuffers";

export class StablehloReduceOptions {
  bb: flatbuffers.ByteBuffer | null = null;
  bb_pos = 0;
  __init(i: number, bb: flatbuffers.ByteBuffer): StablehloReduceOptions {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  static getRootAsStablehloReduceOptions(
    bb: flatbuffers.ByteBuffer,
    obj?: StablehloReduceOptions,
  ): StablehloReduceOptions {
    return (obj || new StablehloReduceOptions()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb,
    );
  }

  static getSizePrefixedRootAsStablehloReduceOptions(
    bb: flatbuffers.ByteBuffer,
    obj?: StablehloReduceOptions,
  ): StablehloReduceOptions {
    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
    return (obj || new StablehloReduceOptions()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb,
    );
  }

  dimensions(index: number): bigint | null {
    const offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8)
      : BigInt(0);
  }

  dimensionsLength(): number {
    const offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
  }

  bodySubgraphIndex(): number {
    const offset = this.bb!.__offset(this.bb_pos, 6);
    return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
  }

  static startStablehloReduceOptions(builder: flatbuffers.Builder) {
    builder.startObject(2);
  }

  static addDimensions(builder: flatbuffers.Builder, dimensionsOffset: flatbuffers.Offset) {
    builder.addFieldOffset(0, dimensionsOffset, 0);
  }

  static createDimensionsVector(builder: flatbuffers.Builder, data: bigint[]): flatbuffers.Offset {
    builder.startVector(8, data.length, 8);
    for (let i = data.length - 1; i >= 0; i--) {
      builder.addInt64(data[i]!);
    }
    return builder.endVector();
  }

  static startDimensionsVector(builder: flatbuffers.Builder, numElems: number) {
    builder.startVector(8, numElems, 8);
  }

  static addBodySubgraphIndex(builder: flatbuffers.Builder, bodySubgraphIndex: number) {
    builder.addFieldInt32(1, bodySubgraphIndex, 0);
  }

  static endStablehloReduceOptions(builder: flatbuffers.Builder): flatbuffers.Offset {
    const offset = builder.endObject();
    return offset;
  }

  static createStablehloReduceOptions(
    builder: flatbuffers.Builder,
    dimensionsOffset: flatbuffers.Offset,
    bodySubgraphIndex: number,
  ): flatbuffers.Offset {
    StablehloReduceOptions.startStablehloReduceOptions(builder);
    StablehloReduceOptions.addDimensions(builder, dimensionsOffset);
    StablehloReduceOptions.addBodySubgraphIndex(builder, bodySubgraphIndex);
    return StablehloReduceOptions.endStablehloReduceOptions(builder);
  }
}
