// automatically generated by the FlatBuffers compiler, do not modify

import "flatbuffers";

export class GeluOptions {
  bb: flatbuffers.ByteBuffer | null = null;
  bb_pos = 0;
  __init(i: number, bb: flatbuffers.ByteBuffer): GeluOptions {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  static getRootAsGeluOptions(bb: flatbuffers.ByteBuffer, obj?: GeluOptions): GeluOptions {
    return (obj || new GeluOptions()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  }

  static getSizePrefixedRootAsGeluOptions(
    bb: flatbuffers.ByteBuffer,
    obj?: GeluOptions,
  ): GeluOptions {
    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
    return (obj || new GeluOptions()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  }

  approximate(): boolean {
    const offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
  }

  static startGeluOptions(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  static addApproximate(builder: flatbuffers.Builder, approximate: boolean) {
    builder.addFieldInt8(0, +approximate, +false);
  }

  static endGeluOptions(builder: flatbuffers.Builder): flatbuffers.Offset {
    const offset = builder.endObject();
    return offset;
  }

  static createGeluOptions(builder: flatbuffers.Builder, approximate: boolean): flatbuffers.Offset {
    GeluOptions.startGeluOptions(builder);
    GeluOptions.addApproximate(builder, approximate);
    return GeluOptions.endGeluOptions(builder);
  }
}
