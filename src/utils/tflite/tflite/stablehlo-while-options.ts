// automatically generated by the FlatBuffers compiler, do not modify

import "flatbuffers";

export class StablehloWhileOptions {
  bb: flatbuffers.ByteBuffer | null = null;
  bb_pos = 0;
  __init(i: number, bb: flatbuffers.ByteBuffer): StablehloWhileOptions {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  static getRootAsStablehloWhileOptions(
    bb: flatbuffers.ByteBuffer,
    obj?: StablehloWhileOptions,
  ): StablehloWhileOptions {
    return (obj || new StablehloWhileOptions()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb,
    );
  }

  static getSizePrefixedRootAsStablehloWhileOptions(
    bb: flatbuffers.ByteBuffer,
    obj?: StablehloWhileOptions,
  ): StablehloWhileOptions {
    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
    return (obj || new StablehloWhileOptions()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb,
    );
  }

  condSubgraphIndex(): number {
    const offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
  }

  bodySubgraphIndex(): number {
    const offset = this.bb!.__offset(this.bb_pos, 6);
    return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
  }

  static startStablehloWhileOptions(builder: flatbuffers.Builder) {
    builder.startObject(2);
  }

  static addCondSubgraphIndex(builder: flatbuffers.Builder, condSubgraphIndex: number) {
    builder.addFieldInt32(0, condSubgraphIndex, 0);
  }

  static addBodySubgraphIndex(builder: flatbuffers.Builder, bodySubgraphIndex: number) {
    builder.addFieldInt32(1, bodySubgraphIndex, 0);
  }

  static endStablehloWhileOptions(builder: flatbuffers.Builder): flatbuffers.Offset {
    const offset = builder.endObject();
    return offset;
  }

  static createStablehloWhileOptions(
    builder: flatbuffers.Builder,
    condSubgraphIndex: number,
    bodySubgraphIndex: number,
  ): flatbuffers.Offset {
    StablehloWhileOptions.startStablehloWhileOptions(builder);
    StablehloWhileOptions.addCondSubgraphIndex(builder, condSubgraphIndex);
    StablehloWhileOptions.addBodySubgraphIndex(builder, bodySubgraphIndex);
    return StablehloWhileOptions.endStablehloWhileOptions(builder);
  }
}
