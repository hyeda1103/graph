// automatically generated by the FlatBuffers compiler, do not modify

import "flatbuffers";

export class StablehloBroadcastInDimOptions {
  bb: flatbuffers.ByteBuffer | null = null;
  bb_pos = 0;
  __init(i: number, bb: flatbuffers.ByteBuffer): StablehloBroadcastInDimOptions {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  static getRootAsStablehloBroadcastInDimOptions(
    bb: flatbuffers.ByteBuffer,
    obj?: StablehloBroadcastInDimOptions,
  ): StablehloBroadcastInDimOptions {
    return (obj || new StablehloBroadcastInDimOptions()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb,
    );
  }

  static getSizePrefixedRootAsStablehloBroadcastInDimOptions(
    bb: flatbuffers.ByteBuffer,
    obj?: StablehloBroadcastInDimOptions,
  ): StablehloBroadcastInDimOptions {
    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
    return (obj || new StablehloBroadcastInDimOptions()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb,
    );
  }

  broadcastDimensions(index: number): bigint | null {
    const offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8)
      : BigInt(0);
  }

  broadcastDimensionsLength(): number {
    const offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
  }

  static startStablehloBroadcastInDimOptions(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  static addBroadcastDimensions(
    builder: flatbuffers.Builder,
    broadcastDimensionsOffset: flatbuffers.Offset,
  ) {
    builder.addFieldOffset(0, broadcastDimensionsOffset, 0);
  }

  static createBroadcastDimensionsVector(
    builder: flatbuffers.Builder,
    data: bigint[],
  ): flatbuffers.Offset {
    builder.startVector(8, data.length, 8);
    for (let i = data.length - 1; i >= 0; i--) {
      builder.addInt64(data[i]!);
    }
    return builder.endVector();
  }

  static startBroadcastDimensionsVector(builder: flatbuffers.Builder, numElems: number) {
    builder.startVector(8, numElems, 8);
  }

  static endStablehloBroadcastInDimOptions(builder: flatbuffers.Builder): flatbuffers.Offset {
    const offset = builder.endObject();
    return offset;
  }

  static createStablehloBroadcastInDimOptions(
    builder: flatbuffers.Builder,
    broadcastDimensionsOffset: flatbuffers.Offset,
  ): flatbuffers.Offset {
    StablehloBroadcastInDimOptions.startStablehloBroadcastInDimOptions(builder);
    StablehloBroadcastInDimOptions.addBroadcastDimensions(builder, broadcastDimensionsOffset);
    return StablehloBroadcastInDimOptions.endStablehloBroadcastInDimOptions(builder);
  }
}
